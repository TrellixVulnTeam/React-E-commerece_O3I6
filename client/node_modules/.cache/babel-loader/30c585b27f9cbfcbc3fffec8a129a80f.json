{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\"; // logger middleware\n\nimport { persistStore } from \"redux-persist\"; // allows our browser to cache the store depending upon the configuration options\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nconst sagaMiddleware = createSagaMiddleware(); // this function can take an object with certain configuration settings\n\nconst middlewares = [sagaMiddleware]; // Use the logger only when the application is run locally\n\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAmC;;AACnC,SAASC,YAAT,QAA6B,eAA7B,C,CAA8C;;AAC9C,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAA+C;;AAE/C,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4CH,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AAE5C,OAAO,MAAMU,KAAK,GAAGZ,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGM,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\"; // logger middleware\nimport { persistStore } from \"redux-persist\"; // allows our browser to cache the store depending upon the configuration options\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\n\nconst sagaMiddleware = createSagaMiddleware(); // this function can take an object with certain configuration settings\n\nconst middlewares = [sagaMiddleware];\n\n// Use the logger only when the application is run locally\nif (process.env.NODE_ENV === \"development\") middlewares.push(logger);\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}