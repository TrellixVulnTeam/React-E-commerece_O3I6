{"ast":null,"code":"// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport UserActionTypes from \"./user.types\"; // We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // Return the user\n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n}); // Return the error if any\n\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); // We'll need the email and password for the sign in\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","signInSuccess","user","SIGN_IN_SUCCESS","payload","signInFailure","error","SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADgB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACtCH,EAAAA,IAAI,EAAEF,eAAe,CAACM,eADgB;AAEtCC,EAAAA,OAAO,EAAEF;AAF6B,CAAX,CAAtB,C,CAKP;;AACA,OAAO,MAAMG,aAAa,GAAIC,KAAD,KAAY;AACvCP,EAAAA,IAAI,EAAEF,eAAe,CAACU,eADiB;AAEvCH,EAAAA,OAAO,EAAEE;AAF8B,CAAZ,CAAtB,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAIC,gBAAD,KAAuB;AACrDV,EAAAA,IAAI,EAAEF,eAAe,CAACa,mBAD+B;AAErDN,EAAAA,OAAO,EAAEK;AAF4C,CAAvB,CAAzB;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACrCZ,EAAAA,IAAI,EAAEF,eAAe,CAACe;AADe,CAAP,CAAzB","sourcesContent":["// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport UserActionTypes from \"./user.types\";\n\n// We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\n// Return the user\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\n// Return the error if any\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n\n// We'll need the email and password for the sign in\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword,\n});\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION,\n});\n"]},"metadata":{},"sourceType":"module"}