{"ast":null,"code":"var _jsxFileName = \"/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    // onAuthStateChanged takes a function as a parameter. The parameter of that function is the state of the user on auth or on our application\n    // This connection is always open until the component is unmounted\n    // It establishes a connection between the application anf Firebase\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // Listen to the userRef for the changes in the data. But, we also get the first state of the data which in this case is \"snapShot\"\n\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              // Getting the id from the snapshot\n              ...snapShot.data() // Getting the data from the snapshot\n\n            }\n          }, () => {\n            console.log(this.state);\n          });\n        });\n      } else this.setState({\n        currentUser: userAuth\n      }, () => console.log(this.state)); // Setting the current user to null in the state if the user logs out\n\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth(); // closes the subscription\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SignInAndSignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  curre\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/App.js"],"names":["React","connect","Route","Switch","HomePage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","setCurrentUser","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render","mapDispatchToProps","dispatch","curre"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,cAAT,QAA+B,2BAA/B;;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAOdC,mBAPc,GAOQ,IAPR;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA,SAAKH,mBAAL,GAA2BN,IAAI,CAACU,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C,CADY,CAEZ;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAoBC,QAAD,IAAc;AAC/B,eAAKC,QAAL,CACE;AACEP,YAAAA,WAAW,EAAE;AACXQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AACM;AACjB,iBAAGF,QAAQ,CAACG,IAAT,EAFQ,CAES;;AAFT;AADf,WADF,EAOE,MAAM;AACJC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,WATH;AAWD,SAZD;AAaD,OAhBD,MAiBE,KAAKQ,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEG;AAAf,OAAd,EAAyC,MAAMO,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB,CAA/C,EAlBmE,CAkBM;;AAC5E,KAnB0B,CAA3B;AAoBD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL,GADqB,CACO;AAC7B;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEzB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAnD+B;;AAsDlC,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA;AADwC,CAAf,CAA3B;;AAIA,eAAe/B,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCnB,GAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    // onAuthStateChanged takes a function as a parameter. The parameter of that function is the state of the user on auth or on our application\n    // This connection is always open until the component is unmounted\n    // It establishes a connection between the application anf Firebase\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        // Listen to the userRef for the changes in the data. But, we also get the first state of the data which in this case is \"snapShot\"\n        userRef.onSnapshot((snapShot) => {\n          this.setState(\n            {\n              currentUser: {\n                id: snapShot.id, // Getting the id from the snapshot\n                ...snapShot.data(), // Getting the data from the snapshot\n              },\n            },\n            () => {\n              console.log(this.state);\n            }\n          );\n        });\n      } else\n        this.setState({ currentUser: userAuth }, () => console.log(this.state)); // Setting the current user to null in the state if the user logs out\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth(); // closes the subscription\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  curre,\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}