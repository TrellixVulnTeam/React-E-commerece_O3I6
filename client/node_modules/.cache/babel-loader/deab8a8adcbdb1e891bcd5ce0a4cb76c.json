{"ast":null,"code":"var _jsxFileName = \"/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/components/with-spinner/with-spinner.component.jsx\";\nimport React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\"; // WithSpinner is a HOC that returns a component that takes in some props (one of which is isLoading)\n// Then, depending upon the value of isLoading, the component either returns a spinner component or the original component with all the other props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithSpinner = WrappedComponent => ({\n  isLoading,\n  ...otherProps\n}) => {\n  return isLoading ? /*#__PURE__*/_jsxDEV(SpinnerOverlay, {\n    children: /*#__PURE__*/_jsxDEV(SpinnerContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(WrappedComponent, { ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD,C,CAEA;AACA;;;;AACA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAAkC;AAC1E,SAAOD,SAAS,gBACd,QAAC,cAAD;AAAA,2BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADc,gBAKd,QAAC,gBAAD,OAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,UALF;AAOD,CARD;;AAUA,eAAeH,WAAf","sourcesContent":["import React from \"react\";\n\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n\n// WithSpinner is a HOC that returns a component that takes in some props (one of which is isLoading)\n// Then, depending upon the value of isLoading, the component either returns a spinner component or the original component with all the other props\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? (\n    <SpinnerOverlay>\n      <SpinnerContainer />\n    </SpinnerOverlay>\n  ) : (\n    <WrappedComponent {...otherProps} />\n  );\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}