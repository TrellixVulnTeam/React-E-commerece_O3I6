{"ast":null,"code":"// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport { UserActionTypes } from \"./user.types\";\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n}); // We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // Return the user\n\nexport const googleSignInSuccess = user => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user\n}); // Return the error if any\n\nexport const googleSignInFailure = error => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","googleSignInSuccess","GOOGLE_SIGN_IN_SUCCESS","googleSignInFailure","error","GOOGLE_SIGN_IN_FAILURE"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,cAAhC;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBADiB;AAEvCC,EAAAA,OAAO,EAAEH;AAF8B,CAAX,CAAvB,C,CAKP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACtCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADgB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,mBAAmB,GAAIN,IAAD,KAAW;AAC5CC,EAAAA,IAAI,EAAEH,eAAe,CAACS,sBADsB;AAE5CJ,EAAAA,OAAO,EAAEH;AAFmC,CAAX,CAA5B,C,CAKP;;AACA,OAAO,MAAMQ,mBAAmB,GAAIC,KAAD,KAAY;AAC7CR,EAAAA,IAAI,EAAEH,eAAe,CAACY,sBADuB;AAE7CP,EAAAA,OAAO,EAAEM;AAFoC,CAAZ,CAA5B","sourcesContent":["// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport { UserActionTypes } from \"./user.types\";\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\n// We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\n// Return the user\nexport const googleSignInSuccess = (user) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user,\n});\n\n// Return the error if any\nexport const googleSignInFailure = (error) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error,\n});\n"]},"metadata":{},"sourceType":"module"}