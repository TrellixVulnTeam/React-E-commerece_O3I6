{"ast":null,"code":"var _jsxFileName = \"/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","path","loading","mapStateToProps","isFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,SAASC,0BAAT,QAA2C,iCAA3C;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;MAAMK,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGD,KAAD,iBACN,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEE,OAA3C;AAAA,aAAwDF;AAAxD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGD,KAAD,iBACN,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEE,OAAtC;AAAA,aAAmDF;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAtBoC;;AAyBvC,MAAMG,eAAe,GAAGhB,wBAAwB,CAAC;AAC/CiB,EAAAA,UAAU,EAAEZ;AADmC,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}