{"ast":null,"code":"// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport UserActionTypes from \"./user.types\";\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n}); // We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // Return the user\n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user\n}); // Return the error if any\n\nexport const signInFailure = error => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error\n}); // We'll need the email and password for the sign in\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","signInSuccess","GOOGLE_SIGN_IN_SUCCESS","signInFailure","error","GOOGLE_SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBADiB;AAEvCC,EAAAA,OAAO,EAAEH;AAF8B,CAAX,CAAvB,C,CAKP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACtCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADgB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,aAAa,GAAIN,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEH,eAAe,CAACS,sBADgB;AAEtCJ,EAAAA,OAAO,EAAEH;AAF6B,CAAX,CAAtB,C,CAKP;;AACA,OAAO,MAAMQ,aAAa,GAAIC,KAAD,KAAY;AACvCR,EAAAA,IAAI,EAAEH,eAAe,CAACY,sBADiB;AAEvCP,EAAAA,OAAO,EAAEM;AAF8B,CAAZ,CAAtB,C,CAKP;;AACA,OAAO,MAAME,gBAAgB,GAAIC,gBAAD,KAAuB;AACrDX,EAAAA,IAAI,EAAEH,eAAe,CAACe,mBAD+B;AAErDV,EAAAA,OAAO,EAAES;AAF4C,CAAvB,CAAzB","sourcesContent":["// Action creator functions -> Functions that return objects that are in the correct format that the actions are supposed to be in\nimport UserActionTypes from \"./user.types\";\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\n// We don't need a payload here as the saga will handle all the stuff and this is just for notfying the saga to begin\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\n// Return the user\nexport const signInSuccess = (user) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user,\n});\n\n// Return the error if any\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error,\n});\n\n// We'll need the email and password for the sign in\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword,\n});\n"]},"metadata":{},"sourceType":"module"}