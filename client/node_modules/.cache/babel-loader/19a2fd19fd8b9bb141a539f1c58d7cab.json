{"ast":null,"code":"// Writing the store\n// Base reducer that represents state of the entire application\nimport { combineReducers } from \"redux\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // gives the localStorage object from the window object\n// Possible configurations for redux persist -\n\nconst persistConfig = {\n  key: \"root\",\n  // At what point inside the reducer object do we want to store everything\n  storage,\n  // storage: storage where the storage value is the localStorage that we imported\n  whitelist: [\"cart\"] // list consisting of string names of the reducers that we wish to store\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/chiragvaswani/Documents/ZTM-Projects/React/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","userReducer","cartReducer","directoryReducer","persistReducer","storage","persistConfig","key","whitelist","rootReducer","user","cart","directory"],"mappings":"AAAA;AACA;AAEA,SAASA,eAAT,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;AAEjD;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AACP;AACbF,EAAAA,OAFoB;AAEX;AACTG,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS,CAGC;;AAHD,CAAtB;AAMA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAET,WAD4B;AAElCU,EAAAA,IAAI,EAAET,WAF4B;AAGlCU,EAAAA,SAAS,EAAET;AAHuB,CAAD,CAAnC;AAMA,eAAeC,cAAc,CAACE,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["// Writing the store\n// Base reducer that represents state of the entire application\n\nimport { combineReducers } from \"redux\";\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\n\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // gives the localStorage object from the window object\n\n// Possible configurations for redux persist -\nconst persistConfig = {\n  key: \"root\", // At what point inside the reducer object do we want to store everything\n  storage, // storage: storage where the storage value is the localStorage that we imported\n  whitelist: [\"cart\"], // list consisting of string names of the reducers that we wish to store\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}